name: AUR package

on:
  pull_request:
    paths:
      - ".github/workflows/main.yaml"

  schedule:
    - cron: "0 4 * * *"

jobs:
  update:
    runs-on: ubuntu-latest
    container:
      image: reiemp/aur
      options: --user root

    steps:
      - name: Update and install additional packages
        run: |
          sudo pacman -Syu --noconfirm --noprogressbar
          sudo pacman -S --noconfirm --noprogressbar wget

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Checkout AUR repository
        run: git clone https://aur.archlinux.org/timeular.git

      - name: Extract current version
        id: current
        working-directory: ./timeular
        run: |
          VERSION=`cat PKGBUILD | grep 'pkgver=' | sed -e 's/pkgver=//'`
          echo "${VERSION}"
          echo "::set-output name=version::${VERSION}"

      - name: Extract latest version
        id: latest
        run: |
          wget --no-verbose https://s3.amazonaws.com/timeular-desktop-packages/linux/production/Timeular.AppImage
          chmod +x Timeular.AppImage
          ./Timeular.AppImage --appimage-extract

          VERSION=`cat squashfs-root/timeular.desktop | grep X-AppImage-Version | sed -e 's/[^=]\+=\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/'`
          echo "${VERSION}"
          echo "::set-output name=version::${VERSION}"

      - name: Update PKGBUILD
        id: update
        if: steps.current.outputs.version != steps.latest.outputs.version
        working-directory: ./timeular
        env:
          CURRENT_VERSION: ${{ steps.current.outputs.version }}
          LATEST_VERSION: ${{ steps.latest.outputs.version }}
        run: |
          sed -e "s/${CURRENT_VERSION}/${LATEST_VERSION}/" -i PKGBUILD
          sed -e 's/pkgrel=[0-9]\+/pkgrel=0/' -i PKGBUILD
          
          updpkgsums
          namcap PKGBUILD
          
          MSG="${CURRENT_VERSION} -> ${LATEST_VERSION}"
          echo "::set-output name=msg::${MSG}"

      - name: Update AUR package
        if: steps.current.outputs.version != steps.latest.outputs.version
        uses: KSXGitHub/github-actions-deploy-aur@v2.2.5
        with:
          pkgname: timeular
          pkgbuild: ./timeular/PKGBUILD
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: ${{ steps.update.outputs.msg }}

      - name: Create an issue for failed scheduled workflow
        uses: JasonEtco/create-an-issue@v2
        if: failure() && github.event_name == 'schedule'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          WORKFLOW: ${{ github.workflow }}
          JOB: ${{ github.job }}
          ID: ${{ github.run_id }}
        with:
          filename: .github/auto_update_failure_template.md
