name: AUR package

on:
  pull_request:
    paths:
      - ".github/workflows/main.yaml"

  schedule:
    - cron: "0 4 * * *"

jobs:
  update:
    runs-on: ubuntu-latest
    container:
      image: reiemp/aur
      options: --user aur

    steps:
      - name: Update and install additional packages
        run: |
          sudo pacman -Syu --noconfirm --noprogressbar
          sudo pacman -S wget --noconfirm --noprogressbar

      - name: Setup ssh
        env:
          HOME: /home/aur
        run: echo "${{ secrets.AUR_SSH_PRIVATE_KEY }}" > ~/.ssh/aur

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup git and submodule
        run: |
          git config --global user.name 'Philip Meier'
          git config --global user.email 'meier.philip@posteo.de'
          
          cd aur-timeular
          git fetch origin
          git checkout master
          git branch -u origin/master

      - name: Extract current version
        id: current
        working-directory: ./aur-timeular
        run: |
          SHA512=`cat PKGBUILD | grep sha512sums | sed -e "s/sha512sums=('\([0-9a-f]\{128\}\)'/\1/"`
          echo "${SHA512}"
          echo "::set-output name=sha512::${SHA512}"
          
          VERSION=`cat PKGBUILD | grep 'pkgver=' | sed -e 's/pkgver=//'`
          echo "${VERSION}"
          echo "::set-output name=version::${VERSION}"

      - name: Extract latest version
        id: latest
        run: |
          wget --no-verbose https://s3.amazonaws.com/timeular-desktop-packages/linux/production/Timeular.AppImage
          
          SHA512=`sha512sum Timeular.AppImage | cut -d " " -f 1`
          echo "${SHA512}"
          echo "::set-output name=sha512::${SHA512}"
          
          chmod +x Timeular.AppImage
          ./Timeular.AppImage --appimage-extract
          VERSION=`cat squashfs-root/timeular.desktop | grep X-AppImage-Version | sed -e 's/[^=]\+=\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/'`
          echo "${VERSION}"
          echo "::set-output name=version::${VERSION}"

      - name: Update AUR package
        id: update
#        if: steps.current.outputs.version != steps.latest.outputs.version
        if: always()
        working-directory: ./aur-timeular
        env:
          CURRENT_SHA512: ${{ steps.current.outputs.sha512 }}
          CURRENT_VERSION: ${{ steps.current.outputs.version }}
          LATEST_SHA512: ${{ steps.latest.outputs.sha512 }}
          LATEST_VERSION: ${{ steps.latest.outputs.version }}
        run: |
          sed -e "s/${CURRENT_VERSION}/${LATEST_VERSION}/" -i PKGBUILD
          sed -e 's/pkgrel=[0-9]\+/pkgrel=0/' -i PKGBUILD
          sed -e "s/${CURRENT_SHA512}/${LATEST_SHA512}/" -i PKGBUILD
          
          namcap PKGBUILD
          makepkg --verifysource
          
          makepkg --printsrcinfo > .SRCINFO

          MSG="${CURRENT_VERSION} -> ${LATEST_VERSION}"
          echo "::set-output name=msg::${VERSION}"
          
          git commit -am "${MSG}"
          git diff HEAD~1
#          git push
#
#          cd ..
#          git fetch origin
#
#      - uses: stefanzweifel/git-auto-commit-action@v4
#        with:
#          commit_message: Update submodule ${{ steps.update.outputs.msg }}
